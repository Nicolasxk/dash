import streamlit as st
import pandas as pd
import plotly.express as px
import numpy as np
import calendar
import os
import io
import base64

st.set_page_config(layout="wide")

# Função para carregar e preparar o DataFrame
@st.cache_data
def load_and_preprocess_data():
    try:
        script_dir = os.path.dirname(os.path.abspath(__file__))
        excel_file_path = os.path.join(script_dir, 'previsoes nova (1).xlsx')
        df = pd.read_excel(excel_file_path, sheet_name="Futuras", usecols="A:I")
        df = df.fillna(0)
        df.rename(columns={
            "cancelamento": "cancelamento_previsto",
            "preventiva": "preventiva_previsto",
            "reclamacao": "reclamacao_previsto",
            "troca": "troca_previsto",
            "informacao": "informacao_previsto",
            "solicitacao": "solicitacao_previsto",
            "pre-venda": "pre-venda_previsto"
        }, inplace=True)
        df['ds'] = pd.to_datetime(df['ds'], errors='coerce')
        df['year'] = df['ds'].dt.year
        df.loc[:, 'year'] = df['year'].replace({np.nan: None})
        df['month'] = df['ds'].dt.month
        cols_to_convert = ['cancelamento_previsto', 'preventiva_previsto', 'reclamacao_previsto', 'troca_previsto',
                           'informacao_previsto', 'solicitacao_previsto', 'pre-venda_previsto']
        df[cols_to_convert] = df[cols_to_convert].apply(pd.to_numeric, errors='coerce')
        df[cols_to_convert] = df[cols_to_convert].fillna(0)
        df['y_previsto'] = df[cols_to_convert].sum(axis=1)
        return df
    except FileNotFoundError:
        st.error("Erro: 'previsoes nova (1).xlsx' não encontrado.")
        st.stop()
    except Exception as e:
        st.error(f"Ocorreu um erro ao ler o arquivo excel: {e}")
        st.stop()


df = load_and_preprocess_data()

# ------ CSS Styling ------
CSS = """
<style>
    .stContainer { margin-bottom: 10px; }
    .data-panel-container { margin: 5px; }
    .data-panel {
        text-align: center;
        box-sizing: border-box;
         transition: background-color 0.3s ease;
         margin-bottom: 10px;
          border: 1px solid #444; /* Use subtle gray for border */
          padding: 5px; /* Add padding for better spacing */
           border-radius: 5px; /* Add border radius */
    }
    .data-panel:hover {
        background-color: #364156;
        cursor: pointer;
    }
    .data-panel h3 { color: #aaa; font-size: 0.9em; margin: 0; }
    .data-panel h1 { color: white; font-size: 2em; margin: 0; }
     .data-panel p {
        color: #ddd;
        font-size: 0.8em;
         margin: 0;
    }
    .box-panel {
        padding: 10px;
        border-radius: 5px;
        margin-bottom: 10px;
        background-color: #2d3748;
    }
    .graph-container {
        border: 1px solid #666; /* Adjust the border color for the graphs container */
        height: 300px;
        display: flex;
        align-items: center;
        justify-content: center;
        overflow: hidden;
    }
    .chart-wrapper {
      height: 100%;
       display: flex;
    }
    #number-panel { height: 150px; }
    #rectangle-panel { border: 1px solid #666; height: 250px; } /* Adjust the border color for the rectangle panel */
    #calendar-panel { border: 1px solid #666; height: 250px; } /* Adjust the border color for the calendar panel */
    #square-panel { border: 1px solid #666; height: 250px; } /* Adjust the border color for the square panel */
    h2 { font-size: 2em; } /* Increase dashboard title size */
</style>
"""


def display_data_panels(num_panels, data_dict=None):
    """Exibe uma linha de painéis de dados com conteúdo dinâmico opcional."""
    cols = st.columns(num_panels)
    with st.container():
        st.markdown('<div class="panel-row">', unsafe_allow_html=True)
        for i, col in enumerate(cols):
            with col:
                with st.container():
                    panel_num = i + 1
                    if data_dict and panel_num in data_dict:
                        title, value, subtext = data_dict[panel_num]
                        # Formatar números com vírgulas e remover casas decimais
                        if isinstance(value, (int, float)):
                            formatted_value = f"{value:,.0f}"
                        else:
                            formatted_value = value
                        st.markdown(f'''
                        <div class="data-panel">
                        <h3>{title}</h3>
                        <h1>{formatted_value}</h1>
                        <p>{subtext}</p>
                        </div>
                        ''',
                                    unsafe_allow_html=True)
                    else:
                        st.markdown(
                            f'<div class="data-panel"><h3>Painel {panel_num}</h3><h1>{panel_num}</h1></div>',
                            unsafe_allow_html=True)
        st.markdown('</div>', unsafe_allow_html=True)


def create_total_sum_bar_chart(filtered_df, categories):
    """Cria e retorna um gráfico de barras da soma total por categoria."""
    if filtered_df.empty:
        return px.bar(title="Sem dados para exibir")

    for col in categories:
        filtered_df[col] = pd.to_numeric(filtered_df[col], errors='coerce')

    category_sums = filtered_df[categories].sum().reset_index()
    category_sums.columns = ['category', 'total']
    fig = px.bar(category_sums, x='category', y='total',
                 title='Total de Casos por Categoria',
                 color_discrete_sequence=px.colors.qualitative.Pastel)
    fig.update_layout(height=400, title_x=0.5, margin=dict(b=100))  # Altered height and added bottom margin
    return fig


def create_daily_sum_bar_charts(filtered_df, categories):
    """Cria um gráfico de barras com a soma diária de todas as categorias nos últimos 7 dias."""
    max_date = df['ds'].max()
    last_7_days = pd.date_range(end=max_date, periods=7, freq='D')
    filtered_df_7days = filtered_df[filtered_df['ds'].isin(last_7_days)].copy()
    try:
        for col in categories:
             filtered_df_7days[col] = pd.to_numeric(filtered_df_7days[col], errors='coerce')
        daily_counts = filtered_df_7days.groupby('ds')[categories].sum().reset_index()
        daily_counts['daily_sum'] = daily_counts[categories].sum(axis=1)
        daily_df = daily_counts[['ds', 'daily_sum']].copy()
        fig = px.bar(daily_df, x='ds', y='daily_sum',
                    title='Contagem Diária de Casos (Últimos 7 Dias)',
                    color_discrete_sequence=px.colors.qualitative.Pastel)
        fig.update_layout(height=400, title_x=0.5, margin=dict(b=100))  # Increased height and added a bottom margin
        return fig
    except Exception as e:
         return px.bar(title=f"Sem dados para exibir nos últimos 7 dias. (Erro:{e})",
                x=[pd.to_datetime('today') - pd.Timedelta(days=6), pd.to_datetime('today')], y=[0, 1])


def create_big_bar_chart(filtered_df):
    """Cria e retorna um gráfico de barras grande com os dados do último mês."""
    max_date = df['ds'].max()
    first_day_month = max_date.replace(day=1)
    filtered_df_month = filtered_df[filtered_df['ds'] >= first_day_month].copy()

    try:
        pie_categories = ['cancelamento_previsto', 'preventiva_previsto', 'reclamacao_previsto',
                          'troca_previsto', 'informacao_previsto', 'solicitacao_previsto', 'pre-venda_previsto']
        
        for col in pie_categories:
            filtered_df_month[col] = pd.to_numeric(filtered_df_month[col], errors='coerce')

        daily_counts = filtered_df_month.groupby('ds')[pie_categories].sum().reset_index()
        daily_counts['monthly_sum'] = daily_counts[pie_categories].sum(axis=1)
        daily_df = daily_counts[['ds', 'monthly_sum']].copy()

        fig = px.bar(daily_df, x='ds', y='monthly_sum',
                     title='Contagem Diária de Casos (1 Mês)',
                     color_discrete_sequence=px.colors.qualitative.Pastel)
        fig.update_layout(height=400, title_x=0.5, margin=dict(b=100))  # Increased height and added a bottom margin
        return fig
    except Exception as e:
        return px.bar(title=f"Sem dados para exibir no último mês. (Erro: {e})",
                x=[first_day_month, max_date], y=[0,1])


def generate_download_link(filtered_df, file_format):
    """Gera um link para download do DataFrame."""
    if file_format == 'csv':
        output = io.StringIO()
        filtered_df.to_csv(output, index=False, encoding='utf-8')
        csv_data = output.getvalue()
        b64 = base64.b64encode(csv_data.encode()).decode()
        return f'<a href="data:file/csv;base64,{b64}" download="dashboard_data.csv">Baixar CSV</a>'
    elif file_format == 'xlsx':
         output = io.BytesIO()
         
         # Retira as colunas year e month do dataframe para exportar somente as corretas
         df_export = filtered_df.copy()
         df_export = df_export.drop(columns = ['year', 'month', 'y'])
         with pd.ExcelWriter(output, engine='xlsxwriter') as writer:
            df_export.to_excel(writer, index=False, sheet_name='Dashboard Data')

            # Formatação do cabeçalho
            header_format = writer.book.add_format({'bold': True, 'text_wrap': True, 'valign': 'top', 'align': 'center'})

            # Ajuste automático de largura das colunas
            for column in df_export.columns:
                column_width = max(df_export[column].astype(str).map(len).max(), len(column))
                col_idx = df_export.columns.get_loc(column)
                writer.sheets['Dashboard Data'].set_column(col_idx, col_idx, column_width + 2)

         xlsx_data = output.getvalue()
         b64 = base64.b64encode(xlsx_data).decode()
         return f'<a href="data:application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;base64,{b64}" download="dashboard_data.xlsx">Baixar XLSX</a>'
    else:
        return ""


def main():
    st.markdown(CSS, unsafe_allow_html=True)

    # --- Sidebar ---
    available_years = df["year"].dropna().unique()
    selected_years = st.sidebar.multiselect(
        key=1,
        label="Ano",
        options=available_years,
        default=available_years.tolist() if len(available_years) > 0 else []
    )

    # --- Define categories ---
    categories = [col for col in df.columns if col not in ['ds', 'y', 'year', 'month', 'y_previsto']]

    # --- Data Filtering ---
    pie_categories = ['cancelamento_previsto', 'preventiva_previsto', 'reclamacao_previsto',
                      'troca_previsto', 'informacao_previsto', 'solicitacao_previsto', 'pre-venda_previsto']

    if selected_years:
        filtered_df = df[df['year'].isin(selected_years)].copy()
    else:
        filtered_df = df.copy()

    # --- Criar Gráficos ---
    fig_total_sum = create_total_sum_bar_chart(filtered_df, categories)
    fig_daily_sum = create_daily_sum_bar_charts(filtered_df, categories)
    fig_big_bar = create_big_bar_chart(filtered_df)

    # --- Data Panel Content ---
    total_cases = 226781
    total_months = filtered_df['month'].nunique() if not filtered_df.empty else 0

    max_month = int(filtered_df['month'].max()) if not filtered_df['month'].dropna().empty else 1
    min_month = int(filtered_df['month'].min()) if not filtered_df['month'].dropna().empty else 1

    panel_data = {
        1: ("Total de Casos", total_cases, "Todas as Categorias"),
        2: ("Meses Ativos", total_months, "Total de Meses"),
        3: ("Média de Casos", total_cases / total_months if total_months != 0 else 'N/A', "Por Mês"),
        4: ("Total de Cancelamentos", filtered_df['cancelamento_previsto'].sum() if not filtered_df.empty else 0,
            "Em Todo o Período"),
        5: ("Total de Preventivas", filtered_df['preventiva_previsto'].sum() if len(categories) > 1 and not filtered_df.empty else 0,
            "Em Todo o Período"),
        6: ("Total de Reclamações", filtered_df['reclamacao_previsto'].sum() if len(categories) > 2 and not filtered_df.empty else 0,
            "Em Todo o Período"),
        7: ("Total de Trocas", filtered_df['troca_previsto'].sum() if len(categories) > 3 and not filtered_df.empty else 0,
            "Em Todo o Período"),
        8: ("Total de Informação", filtered_df['informacao_previsto'].sum() if len(categories) > 4 and not filtered_df.empty else 0,
            "Em Todo o Período"),
        9: ("Total de Solicitações", filtered_df['solicitacao_previsto'].sum() if len(categories) > 5 and not filtered_df.empty else 0,
            "Em Todo o Período"),
        10: ("Total de Pré-Venda", filtered_df['pre-venda_previsto'].sum() if len(categories) > 6 and not filtered_df.empty else 0,
             "Em Todo o Período"),
        11: ("Último Mês", calendar.month_name[max_month], "Atual"),
        12: ("Primeiro Mês", calendar.month_name[min_month], "Histórico"),
        13: ("Ano", filtered_df['year'].dropna().max() if not filtered_df.empty else 'N/A', "Atual"),
        14: ("Última Semana", filtered_df['ds'].max().strftime('%Y-%m-%d') if not filtered_df.empty else 'N/A', "Atual"),
    }

    # --- Layout ---
    display_data_panels(3, panel_data)
    display_data_panels(7, panel_data)
    display_data_panels(7, panel_data)

    cols4 = st.columns(2)

    with cols4[0]:
        st.plotly_chart(fig_total_sum, use_container_width=True)

    with cols4[1]:
        st.plotly_chart(fig_daily_sum, use_container_width=True)

    st.plotly_chart(fig_big_bar, use_container_width=True)


     # --- Botões de Download ---
    st.markdown("### Exportar Dados")
    download_format = st.radio("Selecione o formato:", ["csv", "xlsx"], horizontal=True)
    if st.button("Gerar Link de Download"):                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
         if not filtered_df.empty:                                                                                              
          download_link = generate_download_link(filtered_df, download_format)
          st.markdown(download_link, unsafe_allow_html=True)
         else:
            st.warning("Nenhum dado para exportar.")

if __name__ == "__main__":
    main()